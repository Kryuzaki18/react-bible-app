{"version":3,"sources":["assets/images/search.svg","assets/images/clear.svg","components/Loader.js","components/Header.js","components/Sidebar.js","components/Searchbar.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","text","isAnimated","useState","loadingText","setLoadingText","useEffect","loadingInterval","arrText","split","count","newText","setInterval","length","textPipe","clearInterval","className","React","memo","isCollapse","collapse","collapseSearch","hamburger","document","getElementById","onClick","classList","remove","add","bind","id","src","searchIcon","alt","books","getVerses","setActiveBook","map","key","name","chaptersCount","isActive","e","preventDefault","selectedBook","selectedChapter","selectChapter","search","isCollapseSearch","hasSearchValue","chapters","type","placeholder","onChange","value","target","searchVerses","clearIcon","status","getElementsByClassName","chapter","parseInt","replace","data","Verses","lazy","apiBaseUrl","Boolean","window","location","hostname","match","ReactDOM","render","setCollapse","setCollapseSearch","setBooks","verses","setVerses","setSelectedBook","setSelectedChapter","isLoad","setIsload","setHasSearchValue","isMobile","setIsMobile","fetchBooks","innerWidth","book","filter","arrChapters","push","fetchVerses","bookdId","axios","get","then","response","catch","error","getBook","bookId","newSelectedChapter","selected","callback","time","interval","args","clearTimeout","setTimeout","debounceEvent","a","verse","toLowerCase","filterVerses","Header","Sidebar","newBook","Fragment","Searchbar","Suspense","fallback","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8695e998.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.b9249aa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.cad7540d.svg\";","import React, { useEffect, useState } from \"react\";\r\n\r\nconst Loader = ({ text, isAnimated }) => {\r\n  const [loadingText, setLoadingText] = useState(text || \"Loading...\");\r\n  useEffect(() => {\r\n    let loadingInterval;\r\n\r\n    const textPipe = () => {\r\n      if (loadingText && isAnimated) {\r\n        let arrText = loadingText.split(\"\");\r\n        let count = -1;\r\n        let newText = \"\";\r\n\r\n        loadingInterval = setInterval(() => {\r\n          count += 1;\r\n\r\n          if (count >= arrText.length) {\r\n            count = 0;\r\n            newText = \"\";\r\n          } else {\r\n          }\r\n          newText += arrText[count];\r\n          setLoadingText(newText);\r\n        }, 300);\r\n      }\r\n    };\r\n\r\n    textPipe();\r\n    return () => {\r\n      if (loadingInterval) clearInterval(loadingInterval);\r\n    };\r\n  }, [loadingText, isAnimated]);\r\n\r\n  return <div className=\"loading\">{loadingText}</div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport searchIcon from \"../assets/images/search.svg\";\r\n\r\nexport default React.memo(({ isCollapse, collapse, collapseSearch }) => {\r\n  const hamburger = document.getElementById(\"hamburger\");\r\n\r\n  const handleHamburgerAnimation = () => {\r\n    if (!isCollapse) hamburger.classList.add(\"active\");\r\n    else hamburger.classList.remove(\"active\");\r\n\r\n    collapse();\r\n  };\r\n\r\n  const handleCollapseSearch = () => {\r\n    hamburger.classList.remove(\"active\");\r\n    collapseSearch();\r\n  };\r\n\r\n  return (\r\n    <header className=\"header-wrapper flex-row\">\r\n      <div\r\n        className=\"hamburger-wrapper\"\r\n        onClick={handleHamburgerAnimation.bind()}\r\n      >\r\n        <div id=\"hamburger\" className=\"hamburger\"></div>\r\n      </div>\r\n\r\n      <div className=\"app-title-wrapper\">\r\n        <span className=\"app-title\">The Bible - King James Version</span>\r\n      </div>\r\n\r\n      <div\r\n        className=\"search-icon-wrapper\"\r\n        onClick={handleCollapseSearch.bind()}\r\n      >\r\n        <img src={searchIcon} alt=\"search\" />\r\n      </div>\r\n    </header>\r\n  );\r\n});\r\n","import React from \"react\";\r\nexport default React.memo(({ books, getVerses, setActiveBook }) => {\r\n  const list = () => {\r\n    const content = books.map(({ id, name, chaptersCount, isActive }, key) => (\r\n      <li key={key}>\r\n        <button\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            getVerses(id);\r\n            setActiveBook(name);\r\n          }}\r\n          className={isActive ? \"active\" : \"\"}\r\n        >\r\n          <span>{name}</span>\r\n          <span className=\"chapters-count\">{chaptersCount}</span>\r\n        </button>\r\n      </li>\r\n    ));\r\n\r\n    return content;\r\n  };\r\n\r\n  return (\r\n    <aside id=\"sidebar\" className=\"sidebar-wrapper\">\r\n      <ul className=\"book-lists\">{list()}</ul>\r\n    </aside>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport clearIcon from \"../assets/images/clear.svg\";\r\nexport default React.memo(\r\n  ({\r\n    selectedBook,\r\n    selectedChapter,\r\n    selectChapter,\r\n    search,\r\n    isCollapseSearch,\r\n    hasSearchValue\r\n  }) => {\r\n    const { name, chapters } = selectedBook;\r\n\r\n    const clearSearch = () => {\r\n      selectChapter({ status: \"\" });\r\n      document.getElementsByClassName(\"search\").search.value = \"\";\r\n    };\r\n\r\n    const searchVerses = e => {\r\n      e.preventDefault();\r\n      const value = e.target.value;\r\n      search(value);\r\n    };\r\n\r\n    return (\r\n      <div className=\"searchbar flex-row\">\r\n        <div className=\"verse-header\">\r\n          <span>Book of</span>\r\n          <span className=\"roboto-black\">\"{name}\"</span>\r\n          <span>|</span>\r\n          <span>Chapter {selectedChapter}</span>\r\n        </div>\r\n        {isCollapseSearch && (\r\n          <div className=\"search-div flex-row\">\r\n            <div className=\"search-wrapper\">\r\n              <input\r\n                className=\"search\"\r\n                type=\"text\"\r\n                name=\"search\"\r\n                placeholder=\"Search keyword...\"\r\n                onChange={e => searchVerses(e)}\r\n              />\r\n              {hasSearchValue && (\r\n                <img\r\n                  className=\"clear-search\"\r\n                  src={clearIcon}\r\n                  alt=\"clear search\"\r\n                  onClick={clearSearch.bind()}\r\n                />\r\n              )}\r\n\r\n              {chapters.length > 1 && (\r\n                <select\r\n                  className=\"select-chapter\"\r\n                  onChange={e => {\r\n                    selectChapter({\r\n                      chapter: parseInt(e.target.value.replace(\"Chapter\", \"\"))\r\n                    });\r\n                  }}\r\n                >\r\n                  {chapters.map((data, key) => (\r\n                    <option key={key}>Chapter {data}</option>\r\n                  ))}\r\n                </select>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"btn-wrapper\">\r\n              {selectedChapter > 1 && (\r\n                <button\r\n                  className=\"button-prev\"\r\n                  onClick={() => {\r\n                    selectChapter({ status: \"prev\" });\r\n                  }}\r\n                >\r\n                  Previous Chapter\r\n                </button>\r\n              )}\r\n              {selectedChapter < chapters.length && (\r\n                <button\r\n                  className=\"button-next\"\r\n                  onClick={() => {\r\n                    selectChapter({ status: \"next\" });\r\n                  }}\r\n                >\r\n                  Next Chapter\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Searchbar from \"./Searchbar\";\r\n\r\nconst Verses = React.lazy(() => import(\"./Verses\"));\r\n\r\n// const apiBaseUrl = \"http://127.0.0.1:7777/v1\";\r\nconst apiBaseUrl = \"https://react-bible-app.herokuapp.com/\";\r\n\r\nexport default () => {\r\n  const [isCollapse, setCollapse] = useState(false);\r\n  const [isCollapseSearch, setCollapseSearch] = useState(true);\r\n  const [books, setBooks] = useState([]);\r\n  const [verses, setVerses] = useState([]);\r\n  const [selectedBook, setSelectedBook] = useState(null);\r\n  const [selectedChapter, setSelectedChapter] = useState(1);\r\n  const [isLoad, setIsload] = useState(false);\r\n  const [hasSearchValue, setHasSearchValue] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsload(true);\r\n    fetchBooks();\r\n    if (window.innerWidth <= 768) {\r\n      setCollapseSearch(false);\r\n      setIsMobile(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (books.length > 0 && isLoad) {\r\n      setIsload(false);\r\n\r\n      let book = books.filter(data => {\r\n        return data.id === 1;\r\n      })[0];\r\n\r\n      let count = 1,\r\n        arrChapters = [],\r\n        chaptersCount = book.chaptersCount;\r\n\r\n      while (chaptersCount >= count) {\r\n        arrChapters.push(count);\r\n        count++;\r\n      }\r\n\r\n      book.chapters = arrChapters;\r\n      book.isActive = true;\r\n      setSelectedBook(book);\r\n\r\n      fetchVerses({\r\n        bookdId: book.id,\r\n        chapter: 1\r\n      });\r\n    }\r\n  }, [books, isLoad]);\r\n\r\n  const fetchBooks = () => {\r\n    axios\r\n      .get(`${apiBaseUrl}/books`)\r\n      .then(response => {\r\n        if (response.status === 200) setBooks(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const setActiveBook = name => {\r\n    const newBook = books.map(book => {\r\n      book.isActive = book.name === name ? true : false;\r\n      return book;\r\n    });\r\n    setBooks(newBook);\r\n  };\r\n\r\n  const collapse = () => {\r\n    if (isMobile) setCollapseSearch(false);\r\n    const newIsCollapse = !isCollapse;\r\n    setCollapse(newIsCollapse);\r\n  };\r\n\r\n  const collapseSearch = () => {\r\n    setCollapse(false);\r\n    setHasSearchValue(false);\r\n    const newIsCollapseSearch = !isCollapseSearch;\r\n    setCollapseSearch(newIsCollapseSearch);\r\n  };\r\n\r\n  const getVerses = bookId => {\r\n    const book = getBook(bookId);\r\n    fetchVerses({\r\n      bookdId: book.id,\r\n      chapter: 1\r\n    });\r\n\r\n    setHasSearchValue(false);\r\n    if (isCollapseSearch) {\r\n      document.getElementsByClassName(\"search\").search.value = \"\";\r\n      const selectChapter = document.getElementsByClassName(\"select-chapter\");\r\n      if (selectChapter.length > 0) selectChapter[0][0].selected = true;\r\n    }\r\n  };\r\n\r\n  const getBook = bookId => {\r\n    let book = books.filter(data => {\r\n      return data.id === bookId;\r\n    })[0];\r\n\r\n    let count = 1,\r\n      chaptersCount = book.chaptersCount,\r\n      arrChapters = [];\r\n\r\n    while (chaptersCount >= count) {\r\n      arrChapters.push(count);\r\n      count++;\r\n    }\r\n\r\n    book.chapters = arrChapters;\r\n    setSelectedBook(book);\r\n    return book;\r\n  };\r\n\r\n  const fetchVerses = ({ bookdId, chapter }) => {\r\n    setSelectedChapter(chapter);\r\n    axios\r\n      .get(`${apiBaseUrl}/verses?bookId=${bookdId}&chapter=${chapter}`)\r\n      .then(response => {\r\n        if (response.status === 200) setVerses(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const selectChapter = ({ chapter, status }) => {\r\n    let newSelectedChapter = chapter ? chapter : selectedChapter;\r\n    const selectChapter = document.getElementsByClassName(\"select-chapter\");\r\n    document.getElementsByClassName(\"search\").search.value = \"\";\r\n    setHasSearchValue(false);\r\n\r\n    if (status === \"next\") {\r\n      newSelectedChapter = selectedChapter + 1;\r\n      selectChapter[0][selectedChapter].selected = true;\r\n    } else if (status === \"prev\") {\r\n      if (newSelectedChapter > 1) {\r\n        newSelectedChapter = selectedChapter - 1;\r\n        selectChapter[0][newSelectedChapter - 1].selected = true;\r\n      } else return;\r\n    }\r\n\r\n    fetchVerses({\r\n      bookdId: selectedBook.id,\r\n      chapter: newSelectedChapter\r\n    });\r\n  };\r\n\r\n  const debounceEvent = (callback, time = 500, interval) => (...args) =>\r\n    clearTimeout(interval, (interval = setTimeout(callback, time, ...args)));\r\n\r\n  const search = debounceEvent(async value => {\r\n    if (value.length === 0) {\r\n      selectChapter({\r\n        chapter: selectedChapter\r\n      });\r\n      return;\r\n    } else if (value.length <= 2) return;\r\n\r\n    const filterVerses = await verses.filter(verse => {\r\n      return verse.text.toLowerCase().search(value.toLowerCase()) !== -1;\r\n    });\r\n\r\n    if (filterVerses.length > 0) {\r\n      setHasSearchValue(true);\r\n      setVerses(filterVerses);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <header className=\"header\">\r\n        <Header\r\n          isCollapse={isCollapse}\r\n          collapse={collapse}\r\n          collapseSearch={collapseSearch}\r\n        />\r\n      </header>\r\n      <main className=\"main flex-row\">\r\n        {isCollapse && (\r\n          <Sidebar\r\n            books={books}\r\n            getVerses={getVerses}\r\n            setActiveBook={setActiveBook}\r\n          />\r\n        )}\r\n        <div className=\"verse-wrapper\">\r\n          {verses.length > 0 && (\r\n            <React.Fragment>\r\n              <Searchbar\r\n                selectedBook={selectedBook}\r\n                selectChapter={selectChapter}\r\n                selectedChapter={selectedChapter}\r\n                search={search}\r\n                isCollapseSearch={isCollapseSearch}\r\n                hasSearchValue={hasSearchValue}\r\n              />\r\n\r\n              <React.Suspense fallback={<Loader />}>\r\n                <Verses\r\n                  verses={verses}\r\n                  isCollapseSearch={isCollapseSearch}\r\n                  selectChapter={selectChapter}\r\n                  isMobile={isMobile}\r\n                />\r\n              </React.Suspense>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}